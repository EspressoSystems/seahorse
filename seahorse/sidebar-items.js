initSidebarItems({"enum":[["RoleKeyPair",""],["WalletError",""]],"fn":[["new_key_pair",""]],"macro":[["cli_write",""],["cli_writeln",""],["command",""],["count",""]],"mod":[["cli",""],["encryption",""],["events",""],["hd",""],["io",""],["loader",""],["persistence",""],["reader",""],["txn_builder",""]],"struct":[["AssetInfo",""],["AssetNotAuditable","SNAFU context selector for the `WalletError::AssetNotAuditable` variant"],["AssetNotFreezable","SNAFU context selector for the `WalletError::AssetNotFreezable` variant"],["AssetNotMintable","SNAFU context selector for the `WalletError::AssetNotMintable` variant"],["BackgroundKeyScan",""],["BadMerkleProof","SNAFU context selector for the `WalletError::BadMerkleProof` variant"],["BincodeError","SNAFU context selector for the `WalletError::BincodeError` variant"],["Cancelled","SNAFU context selector for the `WalletError::Cancelled` variant"],["CannotDecryptMemo","SNAFU context selector for the `WalletError::CannotDecryptMemo` variant"],["ClientConfigError","SNAFU context selector for the `WalletError::ClientConfigError` variant"],["CryptoError","SNAFU context selector for the `WalletError::CryptoError` variant"],["EncryptionError","SNAFU context selector for the `WalletError::EncryptionError` variant"],["Failed","SNAFU context selector for the `WalletError::Failed` variant"],["InvalidAddress","SNAFU context selector for the `WalletError::InvalidAddress` variant"],["InvalidBlock","SNAFU context selector for the `WalletError::InvalidBlock` variant"],["IoError","SNAFU context selector for the `WalletError::IoError` variant"],["KeyError","SNAFU context selector for the `WalletError::KeyError` variant"],["KeyStreamState",""],["MintInfo",""],["NoSuchAccount","SNAFU context selector for the `WalletError::NoSuchAccount` variant"],["NullifierAlreadyPublished","SNAFU context selector for the `WalletError::NullifierAlreadyPublished` variant"],["PersistenceError","SNAFU context selector for the `WalletError::PersistenceError` variant"],["StorageTransaction","Interface for atomic storage transactions."],["TimedOut","SNAFU context selector for the `WalletError::TimedOut` variant"],["TransactionError","SNAFU context selector for the `WalletError::TransactionError` variant"],["UndefinedAsset","SNAFU context selector for the `WalletError::UndefinedAsset` variant"],["UserKeyExists","SNAFU context selector for the `WalletError::UserKeyExists` variant"],["Wallet","Note: it is a soundness requirement that the destructor of a `Wallet` run when the `Wallet` is dropped. Therefore, `std::mem::forget` must not be used to forget a `Wallet` without running its destructor."],["WalletSession",""],["WalletSharedState",""],["WalletState",""]],"trait":[["Captures",""],["SendFuture",""],["WalletBackend",""],["WalletStorage","The interface required by the wallet from the persistence layer."]]});